{"version":3,"sources":["components/Header.js","components/Errors.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Errors","errors","wrongLetters","length","errorImgUrl","process","className","alt","src","WrongLetters","map","letter","index","reduce","previous","current","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3700e34.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Hangman</h1>\r\n            <p>Find the hidden word - Enter a letter</p>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nconst Errors = ({ wrongLetters }) => {\r\n    const errors = wrongLetters.length;\r\n    const errorImgUrl = process.env.PUBLIC_URL + '/error.png';\r\n\r\n    return (\r\n        <div className='error-container'>\r\n            {errors > 0 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n            {errors > 1 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n            {errors > 2 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n            {errors > 3 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n            {errors > 4 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n            {errors > 5 && <img className='error-img' alt='error-icon' src={errorImgUrl} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Errors\r\n","import React from 'react';\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n    return (\r\n        <div className='wrong-letters-container'>\r\n            <div>\r\n                {wrongLetters.length > 0 && <p>Wrong</p>}\r\n                {wrongLetters\r\n                    .map( (letter, index) => <span key={index}>{letter}</span>)\r\n                    .reduce( (previous, current) => previous === null ? [current] : [previous, ', ', current], null)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n    return (\r\n        <div className='word'>\r\n            {selectedWord.split('').map( (letter, index) => {\r\n                return (\r\n                    <span className='letter' key={index}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word\r\n","import React from 'react';\r\n\r\nconst Notification = ({ showNotification }) => {\r\n    return (       \r\n        <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n            <p>You have already entered this letter</p>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","export function showNotification(setter) {\r\n    setter(true)\r\n    setTimeout( () => {\r\n        setter(false)\r\n    }, 2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {    \r\n    let status = 'win';\r\n\r\n    word.split('').forEach( letter => {\r\n        if(!correct.includes(letter)) {           \r\n            status = '';\r\n        }\r\n    })\r\n\r\n    if(wrong.length === 6) status = 'lose';\r\n    \r\n    return status;\r\n}","import React, { useEffect } from 'react';\r\nimport { checkWin } from '../helpers/helpers';\r\n\r\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\r\n    let finalMessage = '';\r\n    let finalMessageRevealWord = '';\r\n    let playable = true;\r\n\r\n    if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\r\n        finalMessage = 'Congratulations! You won! :)';\r\n        playable = false;\r\n    } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\r\n        finalMessage = 'Unfortunately you lost. :(';\r\n        finalMessageRevealWord = ` ...the word was: ${selectedWord}`;\r\n        playable = false;\r\n    }\r\n\r\n    useEffect( () => setPlayable(playable) );\r\n\r\n    return (\r\n        <div className='popup-container' style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n            <div className='popup'>\r\n                <h2>{finalMessage}</h2>\r\n                <h3>{finalMessageRevealWord}</h3>\r\n                <button onClick={playAgain}>Play Again</button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Errors from './components/Errors';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport { showNotification as show } from './helpers/helpers';\n\nconst words = ['application', 'programming', 'interface', 'wizard', 'banana', 'troll'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n    const [playable, setPlayable] = useState(true)\n    const [correctLetters, setCorrectLetters] = useState([])\n    const [wrongLetters, setWrongLetters] = useState([])\n    const [showNotification, setShowNotification] = useState(false)\n\n    useEffect( () => {\n        const handleKeydown = event => {         \n            const { key, keyCode } = event;\n\n            if(playable && keyCode >= 65 && keyCode <= 90) {\n                const letter = key.toLowerCase();\n\n                if(selectedWord.includes(letter)) {\n                    if(!correctLetters.includes(letter)) {\n                        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                } else {\n                    if(!wrongLetters.includes(letter)) {\n                        setWrongLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                }\n            }\n        }\n        window.addEventListener('keydown', handleKeydown);\n\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n    const playAgain = () => {\n        setPlayable(true);       \n        setCorrectLetters([]);\n        setWrongLetters([]);\n\n        const random = Math.floor(Math.random() * words.length);\n        selectedWord = words[random];\n    }\n\n    return (\n        <>\n            <Header />\n            <div className='game-container'>  \n                <Errors wrongLetters={wrongLetters} />\n                <WrongLetters wrongLetters={wrongLetters} />\n                <Word selectedWord={selectedWord} correctLetters={correctLetters} />               \n            </div>            \n            <Popup\n                correctLetters={correctLetters}\n                wrongLetters={wrongLetters}\n                selectedWord={selectedWord}\n                setPlayable={setPlayable}\n                playAgain={playAgain}\n            />\n            <Notification showNotification={showNotification} />\n        </>\n    );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}